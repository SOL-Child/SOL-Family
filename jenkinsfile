pipeline {
    agent any 

    tools { 
        jdk 'jdk-17.0.8.1+1' 
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                sh 'rm -rf *'
            }
        }

        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }

        stage('Prepare credentials') {
            steps {
                withCredentials([
                    file(credentialsId: 'authentication-service-application-dev.properties', variable: 'AUTHFILE'),
                    //file(credentialsId: 'account-service-application-dev.properties', variable: 'ACCFILE')
                ]) {
                    script{
                        sh 'cp $AUTHFILE backend/authentication-service/src/main/resources/application-dev.properties'
                        //sh 'cp $ACCFILE backend/account-service/src/main/resources/application-dev.properties'
                    }
                }
            }
        }

        stage('Set Execute Permission for Gradlew') {
            steps {
                sh 'chmod +x backend/authentication-service/gradlew'
            }
        }

        stage('Build') {
            environment {
                JAVA_HOME = "/usr/lib/jvm/java-1.17.0-openjdk-amd64"
            }

            steps {
                // Gradle build for account-service
                // dir('backend/account-service') {
                //     sh './gradlew clean build -x test'
                //     script {
                //         def dockerImage = docker.build("kathyleesh/account-service:0.1")
                //         dockerImage.push()
                //     }
                // }

                // Gradle build for authentication-service
                dir('backend/authentication-service') {
                    sh './gradlew clean build -x test'
                    script {
                        def dockerImage = docker.build("kathyleesh/authentication-service:0.1")
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Install Docker Compose') {
            steps {
                sh '''#!/bin/bash
                    curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                    chmod +x /usr/local/bin/docker-compose
                '''
            }
        }


        stage('Docker Compose Up') {
            steps {
                // AWS 자격 증명 및 Jenkins 환경 변수를 사용하여 docker-compose 실행
                withCredentials([
                    usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_HUB_USER', passwordVariable: 'DOCKER_HUB_PASS'),
                    [$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-id']
                ]) {
                    // docker-compose up 실행 전에 필요한 환경 변수 설정
                    sh """
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                        docker-compose -f docker-compose.yml up -d
                    """
                }
            }
        }

    }
}